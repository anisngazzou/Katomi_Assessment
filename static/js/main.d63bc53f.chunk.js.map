{"version":3,"sources":["components/Xinput.js","components/Rect.js","components/HeatMap.js","components/Result.js","components/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["FirstStep","continue","e","preventDefault","props","nextStep","this","values","handleChange","Dialog","open","fullWidth","maxWidth","AppBar","title","TextField","placeholder","type","label","onChange","defaultValue","value","margin","Button","color","variant","onClick","Component","className","width","height","x","y","fill","count","data","HeatMap","randomNbr","Math","floor","random","generateMap","recTags","arr","generateAray","i","push","Rect","ran","Result","back","prevStep","svgToPng","svg","Promise","resolve","reject","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","xml","XMLSerializer","serializeToString","dataUrl","encodeURIComponent","img","Image","onload","drawImage","imageData","toDataURL","onerror","src","handleDownload","a","chart","currentChart","chartSVG","ReactDOM","findDOMNode","children","pngData","FileSaver","saveAs","ref","startIcon","UserForm","state","step","setState","input","amount","parseFloat","target","isNaN","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d63bc53f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport class FirstStep extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n   \r\n    this.props.nextStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <>\r\n          <Dialog\r\n            open\r\n            fullWidth\r\n            maxWidth='sm'\r\n          >\r\n            <AppBar title=\"Katomi Test :)\" />\r\n            <h1>Welcome To Katomi Test Solution </h1>\r\n            <TextField\r\n              placeholder=\"Enter number  in [0,365]\"\r\n              type=\"number\"\r\n              label=\"Enter Your Lucky numbe X\"\r\n              onChange={handleChange('value')}\r\n              defaultValue={values.value}\r\n              margin=\"normal\"\r\n              fullWidth\r\n            />\r\n            <br />\r\n           \r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={this.continue}\r\n            >Continue</Button>\r\n          </Dialog>\r\n        </>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstStep;\r\n","import React from 'react'\r\n\r\nexport default (props) => {\r\n    return (\r\n        <rect\r\n            className=\"rect\"\r\n            width={props.width}\r\n            height={props.height}\r\n            x={props.x}\r\n            y={props.y}\r\n            fill={props.fill}\r\n            data-count={props.count}\r\n            data={props.data}\r\n        ></rect>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Rect from \"./Rect\";\r\nexport class HeatMap extends Component {\r\n  randomNbr = () => {\r\n    let r = Math.floor(Math.random() * (100 - -100 + 1)) + -100;\r\n    return r;\r\n  };\r\n  generateAray() {\r\n    let ran = [];\r\n    for (let i = 0; i < this.props.value; i++) {\r\n      ran.push(this.randomNbr());\r\n    }\r\n    return ran;\r\n  }\r\n  generateMap = () => {\r\n    let recTags = [],\r\n      x = 0,\r\n      y = 0;\r\n    let arr = this.generateAray();\r\n    for (let i = 0; i < this.props.value; i++) {\r\n      if (arr[i] >= 0) {\r\n        recTags.push(\r\n          <Rect\r\n            width=\"8\"\r\n            height=\"8\"\r\n            key={i}\r\n            x={x}\r\n            y={y}\r\n            data-count={arr[i]}\r\n            fill={\"rgb(255 0 0 / \" + arr[i] + \"%)\"}\r\n          ></Rect>\r\n        );\r\n        y += 11;\r\n      } else {\r\n        recTags.push(\r\n          <Rect\r\n            width=\"8\"\r\n            height=\"8\"\r\n            key={i}\r\n            x={x}\r\n            y={y}\r\n            fill={\"rgb(0 255 0 / \" + -arr[i] + \"%)\"}\r\n          ></Rect>\r\n        );\r\n        y += 11;\r\n      }\r\n\r\n      if (y % 7 == 0) {\r\n        x += 11;\r\n        y = 0;\r\n      }\r\n    }\r\n    return recTags;\r\n  };\r\n  render() {\r\n    return ( <div>\r\n        <svg width=\"auto\" height=\"auto\" className=\"js-calendar-graph-svg\">\r\n            <g>\r\n                {this.generateMap()}  \r\n            </g>\r\n        </svg>\r\n    </div>)\r\n  }\r\n}\r\nexport default HeatMap;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport FileSaver from \"file-saver\";\r\nimport HeatMap from \"./HeatMap\";\r\n\r\nexport class Result extends Component {\r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    // PROCESS FORM //\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n  svgToPng = (svg, width, height) => {\r\n    return new Promise((resolve, reject) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      let ctx = canvas.getContext(\"2d\");\r\n\r\n      // Set background to white\r\n      ctx.fillStyle = \"#ffffff\";\r\n      ctx.fillRect(0, 0, width, height);\r\n\r\n      let xml = new XMLSerializer().serializeToString(svg);\r\n      let dataUrl = \"data:image/svg+xml;utf8,\" + encodeURIComponent(xml);\r\n      let img = new Image(width, height);\r\n\r\n      img.onload = () => {\r\n        ctx.drawImage(img, 0, 0);\r\n        let imageData = canvas.toDataURL(\"image/png\", 1.0);\r\n\r\n        resolve(imageData);\r\n      };\r\n\r\n      img.onerror = () => reject();\r\n\r\n      img.src = dataUrl;\r\n    });\r\n  };\r\n\r\n  handleDownload = async () => {\r\n    const chart = this.currentChart;\r\n    let chartSVG = ReactDOM.findDOMNode(chart).children[0];\r\n\r\n    const pngData = await this.svgToPng(chartSVG, 600, 300);\r\n    FileSaver.saveAs(pngData, \"test.png\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider>\r\n        <>\r\n          <Dialog open fullWidth maxWidth=\"sm\">\r\n            <AppBar title=\"Success\" />\r\n            <h1> Your Result</h1>\r\n           <b>{this.props.values.value>0  ? 'Votre HeatMap ' : 'X doit etre positive et <> 0'}</b>.\r\n           \r\n            <HeatMap\r\n              ref={(chart) => (this.currentChart = chart)}\r\n              value={this.props.values.value}\r\n            />\r\n\r\n{this.props.values.value>0  &&\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.handleDownload}\r\n              startIcon={<SaveIcon />}\r\n            >\r\n             \r\n              Save\r\n            </Button> }\r\n\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={this.back}\r\n              startIcon={<ArrowBackIosIcon />}\r\n            >\r\n              Back\r\n            </Button>\r\n          </Dialog>\r\n        </>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React, { Component } from 'react';\r\nimport FirstStep from './Xinput';\r\nimport Result from './Result';\r\n\r\nexport class UserForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    value: null\r\n    \r\n  };\r\n\r\n  // Proceed to next step\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n   \r\n   { this.setState({\r\n      step: step + 1\r\n    });}\r\n  };\r\n\r\n  // Go back to prev step\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1\r\n    });\r\n  };\r\n\r\n  // Handle fields change\r\n  handleChange = input => e => {\r\n    let amount = parseFloat(e.target.value);\r\n    if (isNaN(amount) || amount < 0 || e.target.value[0] === '0') {\r\n      amount = '';\r\n  }\r\n    this.setState({ [input]: amount });\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    const { value } = this.state;\r\n    const values = { value };\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <FirstStep\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 2:\r\n       \r\n        return <Result \r\n        nextStep={this.nextStep}\r\n        prevStep={this.prevStep}\r\n        handleChange={this.handleChange}\r\n        values={values}/>;\r\n      default:\r\n        (console.log('This is a multi-step form '))\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React from 'react';\nimport { UserForm } from './components/UserForm';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}